# modified from: https://github.com/lukka/CppBuildTasks-Validation/blob/v10/.github/workflows/hosted-pure-workflow.yml

# Copyright (c) 2021-2022 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT

name: uil
on:
  push:
    branches: [ main ]
  workflow_dispatch: # started manually
  pull_request:
    branches: [ main ] # PRs against the master branch

jobs:
  job:
    name: ${{ matrix.build }}-${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-24.04, windows-latest ]
        build: [ Release, Debug ]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-24.04
            triplet: x64-linux
    env:
      # Set vcpkg cache directories
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg_cache
      X_VCPKG_REGISTRIES_CACHE: ${{ github.workspace }}/vcpkg_registry_cache

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: "Create vcpkg cache directories '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}' and '${{ env.X_VCPKG_REGISTRIES_CACHE }}'"
        shell: bash
        run: |
          mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
          mkdir -p $X_VCPKG_REGISTRIES_CACHE

      - name: Restore vcpkg cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
            ${{ env.X_VCPKG_REGISTRIES_CACHE }}
          # The key is composed in a way that it gets properly invalidated: this must happen whenever vcpkg.json changes.
          # In this case a cache miss must happen and a new entry with a new key with be pushed to GitHub the cache service.
          # The key includes: hash of the vcpkg.json file and the used vcpkg's triplet.
          # Note: given a key, the cache content is immutable. If a cache entry has been created improperly,
          # in order the recreate the right content the key must be changed as well, and it must be brand new (i.e. not existing already).
          key: |
            ${{ hashFiles( 'vcpkg.json' ) }}-${{ matrix.triplet }}
      
      - name: "Install raylib Linux dependencies"
        run: sudo apt install -yq libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config libgl1-mesa-dev libx11-dev libxcursor-dev libxinerama-dev libxrandr-dev libfmt-dev
        if: ${{ matrix.os == 'ubuntu-24.04' }}

      # Setup the build machine with the most recent versions of CMake and Ninja.
      # Both are cached if not already: on subsequent runs both will be quickly restored from GitHub cache service.
      - uses: lukka/get-cmake@latest

      # On Windows runners, let's ensure to have the Developer Command Prompt environment setup correctly.
      # As used here the Developer Command Prompt created is targeting x64 and using the default the Windows SDK.
      - uses: ilammy/msvc-dev-cmd@v1

      # Run CMake to generate Ninja project files.
      - name: CMake configure
        run: cmake -S . -B build -G "Ninja" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_INSTALL_PREFIX=INSTALL

      # Run CMake to build the project.
      - name: Build ${{matrix.os}} / ${{matrix.build}}
        run: cmake --build build --config ${{matrix.build}}

      # Run CMake to install the project.
      - name: Install ${{matrix.os}} / ${{matrix.build}}
        run: cmake --install build

      - name: Test Suite
        run: ctest --test-dir build
