# modified from: https://github.com/lukka/CppBuildTasks-Validation/blob/v10/.github/workflows/hosted-pure-workflow.yml

# Copyright (c) 2021-2022 Luca Cappa
# Released under the term specified in file LICENSE.txt
# SPDX short identifier: MIT

name: uil
on:
  push:
    branches: [ main, dev ]
  workflow_dispatch: # started manually
  pull_request:
    branches: [ main, dev ] # PRs against the master branch

jobs:
  linux:
    name: ${{ matrix.build }}-ubuntu-${{ matrix.compiler }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build: [ Release, Debug ]
        compiler: [ gcc, clang ]
        include:
          - os: ubuntu-latest
            compiler: gcc
            cc-path: /usr/bin/gcc-13
            cxx-path: /usr/bin/g++-13
            install-script: |
              sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
              sudo apt-get update
              sudo apt-get install -y gcc-13 g++-13
          - os: ubuntu-latest
            compiler: clang
            cc-path: /usr/bin/clang-20
            cxx-path: /usr/bin/clang++-20
            install-script: |
              wget https://apt.llvm.org/llvm.sh
              chmod +x llvm.sh
              sudo ./llvm.sh 20

    steps:
      - uses: actions/checkout@v4

      - name: Install Compiler ${{ matrix.compiler }}
        run: ${{ matrix.install-script }}

      - name: Conficure CMake
        run: |
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/${{ matrix.cc }} 100
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/${{ matrix.cxx }} 100
          cmake -B build -G "Unix Makefiles" \
            -DCMAKE_BUILD_TYPE=${{ matrix.build }} 

      - name: "Install raylib Linux dependencies"
        run: sudo apt install -yq libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev pkg-config libgl1-mesa-dev libx11-dev libxcursor-dev libxinerama-dev libxrandr-dev libfmt-dev

      # Run CMake to build the project.
      - name: Build
        run: cmake --build build -j 10

      # Run CMake to install the project.
      - name: Install
        run: cmake --install build --prefix INSTALL

      - name: Test Suite
        run: ctest --test-dir build --output-on-failure

  windows:
    name: ${{ matrix.build }}-windows-msvc
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build: [ Debug, Release ]


    steps:
      - uses: actions/checkout@v3
      - name: Install Ninja
        run: choco install ninja
      - name: Install CMAKE
        run: choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      - name: set up Visual Studio Enviroment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Configure CMake with Ninja
        run: cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=${{ matrix.build }}
      - name: Build
        run: cmake --build build -j 10
      - name: Install
        run: cmake --install build --prefix INSTALL
      - name: Run Tests
        run: ctest --test-dir build --verbose --output-on-failure
